


# migrate this to below
# while [[ $#pids > 0 ]]; do
#   for pid in $pids; do
#     # `ps` may diplay an error message such "Signal 18 (CONT) caught by ps
#     # (procps-ng version 3.3.9).", see https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=732410
#     if [[ $(ps -o pid= -p $pid 2>/dev/null) == "" ]]; then
#       pids[$pids[(I)$pid]]=()
#     fi
#   done
#   sleep .5
# done
function _load_pkgs() {
    tput civis
    for name alt in ${(kv)pkgs}
    do
        _source_or_install $name $alt
    done
    local dead=-1;
    if [[ $#procs > 0 ]]; then
        errs=0
        local count=0
        local sleeptime=0.5
        while [[ $dead -lt $(( ( $#procs / 2  ) + 1 )) ]]; do
            for p name in ${(kv)procs}; do
                ps -q $p > /dev/null
                dead=$(( $dead + $?))
            done
            local msg=''
            local spinner=('|' '\' '-' '/')
            for p name in ${(kv)procs}; do
                ps -q $p > /dev/null
                if [[ $? -eq 1 ]]; then
                    msg="$msg \033[2K\r"
                    msg="$msg completed $name\n"
                else
                    msg="$msg \033[2K\r"
                    msg="$msg $spinner[$(( ( $count % 4 ) + 1 ))] cloning $name into $MODULES_DIR/$name \n"
                fi
                if grep -qi 'error' $MODULES_DIR/logs/*; then
                    errs=$(( $errs + 1))
                fi

                count=$(( $count + 1))
            done
            printf "\033[%sA" "$(( $#pkgs / 2  ))"
            builtin printf $msg
            sleep $sleeptime
        done
        echo
    fi
    tput cnorm
}
