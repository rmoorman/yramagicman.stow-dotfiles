#!/usr/bin/zsh
hn=$(hostname)
function my_date () {
    if [[ "$hn" == "k-nine" ]];
    then
        date +"%d/%m/%Y %I:%M:%S"
    else
        echo "$(date +"%a %d %b %Y %I:%M:%S")"
    fi
}

function my_bat() {
    notify_when=$(echo "$(date +'%M') % 5" | bc)
    bat_level=$( cat /sys/class/power_supply/BAT1/capacity )
    bat_stat=$( cat /sys/class/power_supply/BAT1/status )
    if [[ $(date +'%S') -eq 30 ]]
    then
        if [[ $( echo "$bat_level < 20" | bc) -eq 1 && (  $notify_when -eq 0 ) && $status != 'Charging'  ]]
         then
             notify-send "Battery low " "$bat_level remaining"
         fi
    fi
    if [[ "$bat_stat" == "Discharging" ]]
    then
        indicator="\xE2\x86\x93"
    else
        indicator="\xE2\x86\x91"
    fi
    echo "B:$bat_level% $indicator"
}

function my_wifi(){
    # ssid=$( nmcli | head -n 1 | awk -F ' ' '{print $4}' )
    ssid = ''
    ip=$($HOME/bin/tmuxip)
    strength=$(wifi_strength)
    if [[ $ssid = 'hide_yo_kids_hide_yo_wi-fi' ]]; then
        msg="\xe2\x8c\x82"
    else
        msg=$ssid
    fi
    echo "N:$msg $ip"
}

function wifi_strength() {
    awk '/[0-9]*/ {if ($3/1 != 0) print $3}' /proc/net/wireless
}

function my_load() {
    load=$( ps -eo cmd,%cpu --sort=-%cpu | awk -F ' ' '{sum += $(NF)} END {print sum}' | cut -d '.' -f 1 )
    cmd=$( ps -eo cmd,%cpu --sort=-%cpu | awk -F ' ' '{print $1}' | head -n 2 | tail -n 1 )
    temp=$(sensors | awk '/Package/ {print $4}')
    echo "Top CMD:$(basename $cmd ) CPU:$load% TEMP:$temp"
}


function my_mail() {
    $HOME/bin/mailmon
}

function my_weather() {
    if [[ -z "$(cat "$HOME/.cache/weather")" ]];
    then
        $HOME/bin/weather.py > $HOME/.cache/weather
        weather=' W:'$(cat $HOME/.cache/weather)
    fi
    modified_date=$(stat $HOME/.cache/weather | awk '/Modify/ {split($3, arr, ":"); print arr[1]}')
    if [[ ! "$(date +"%H" )" -eq $modified_date ]]
    then
        $HOME/bin/weather.py > $HOME/.cache/weather
        weather=' W:'$(cat $HOME/.cache/weather)
    else
        weather=' W:'$(cat $HOME/.cache/weather)
    fi
    echo $weather
}


function my_update() {
    if [[ ! -e $HOME/.cache/updates ]];
    then
        cower -u > $HOME/.cache/u
        checkupdates >> $HOME/.cache/u
        sort -u $HOME/.cache/u > $HOME/.cache/updates
        updates=' U:'$(cat $HOME/.cache/updates | wc -l)
    fi
    mm=$(stat $HOME/.cache/updates | awk '/Modify/ {split($3, arr, ":"); print arr[2]}')
    if [[ "$(( $(date +"%H" ) % 2 ))" -eq 0 && "$(date +"%M")" -eq 15 && ! $mm  -eq 15 ]]
    then
        cower -u > $HOME/.cache/u
        checkupdates >> $HOME/.cache/u
        sort -u $HOME/.cache/u > $HOME/.cache/updates
        rm $HOME/.cache/u
        if [[ $( cat $HOME/.cache/updates | wc -l  ) -gt 10 ]]; then
            msg="$(head -n 15 $HOME/.cache/updates) <br>with $(wc -l $HOME/.cache/updates | cut -d ' ' -f 1) total updates"
            notify-send "$msg"
        fi
    else
        updates=' U:'$(cat -s $HOME/.cache/updates | wc -l )
    fi
    if [[ $( cat $HOME/.cache/updates | wc -l  ) -gt 10 ]]
    then
        echo $updates
    fi
}

function my_volume() {
    echo "V:$( amixer -c 0  -- get Master| awk '/Playback [0-9]{0,5} \[[0-9]{0,3}%]/ {print $4 $6}' )"
}

function dbox() {
    box="$(dropbox-cli status)"
    if [[ $box = "Dropbox isn't running!" ]]
    then
        message="off"

    else
        message="$(echo "$box" | head -n1 | cut -d ' ' -f 1)"
    fi
    if [[ $message == "Up to date" ]]
    then
        message="\xe2\x9c\x93"
    fi
    echo "D:$message"
}

line="$(my_update)$(my_mail)$(my_weather) $(my_load)"
if [[ -d /sys/class/power_supply/BAT1/ ]]; then
line="$line $(my_bat)"
fi
line="$line $(my_wifi) $(dbox) $(my_volume) $(my_date)"


xsetroot -name $line

# echo $line
