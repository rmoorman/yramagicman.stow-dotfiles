#!/usr/bin/env zsh

setopt extended_glob

hn=$(hostname)
function my_date () {
    print -P "%D{ %a %d/%m/%Y %I:%M:%S %p }"
}

function my_bat() {
    notify_when=$(($(print -P '%D{ %M }') % 1 ))
    bat_level=$( < $1/capacity )
    bat_stat=$( < $1/status )
    if [[ $(print -P '%D{ %S }') -eq 30 ]]
    then
        if [[ $(($bat_level < 20)) -eq 1 && (  $notify_when -eq 0 ) && $status != 'Charging'  ]]
        then
            notify-send "Battery low " "$bat_level remaining"
        fi
    fi
    if [[ "$bat_stat" == "Discharging" ]]
    then
        indicator="\xE2\x86\x93"
    else
        indicator="\xE2\x86\x91"
    fi
    echo "B:$bat_level% $indicator"
}

function my_wifi(){
    status=$(iwctl station wlan0 show | awk '/State/ {print $2}')
    ip=$(ip --color=never addr show | awk '/([0-9\.]{1,3}){4}\/[0-9]{1,2} brd/ {print $2}')
    echo "N: $ip"
}

function wifi_strength() {
    awk '/[0-9]*/ {if ($3/1 != 0) print $3}' /proc/net/wireless
}

function my_load() {
    load=$( ps -eo cmd,%cpu --sort=-%cpu | awk -F ' ' '{sum += $(NF)} END {split (sum, a, "."); print a[1]}' )
    cmd=$(ps -eo cmd,%cpu -U jonathan --sort=-%cpu |  awk  '/[\w\/]/ { n=split( $1, a, "/" ); print a[n] }' | sed '1q')
    temp=$(sensors -f | awk '/Package/ {print $4}')
    echo "Top CMD:$(basename $cmd ) CPU:$load% TEMP:$temp"
}

function my_mail() {
    # $HOME/bin/mailmon
    mail=$(ls ~/.config/mail/Inbox/new/  | wc -l )
    if test "$mail" -gt 0; then
        echo "M: $mail "
    fi
}

function my_weather() {
    if [[ -z "$(< "/tmp/weather")" ]];
    then
        weather.py > /tmp/weather
        weather='W:'$(< /tmp/weather)
    fi
    modified_date=$(stat /tmp/weather | awk '/Modify/ {split($3, arr, ":"); print arr[1]}')
    if [[ ! "$(print -P "%D{ %H }" )" -eq $modified_date ]]
    then
        $HOME/bin/weather.py > /tmp/weather
        weather='W:'$(< /tmp/weather)
    else
        weather='W:'$(< /tmp/weather)
    fi
    if [[ "$weather" == " W:error" ]]; then
        $HOME/bin/weather.py > /tmp/weather
    fi
    echo $weather
}

function my_update() {
    if [[ ! -f /var/spool/cron/jonathan ]]
    then
        notify-send 'check your user crontab'
    fi
    if [[ -f "/tmp/updates" ]]; then
        if [[ "$(<  /tmp/updates | wc -l )" -gt 10 ]] && [[ ! "$(< /tmp/aur)" ]]; then
            echo " U: $(< /tmp/updates | wc -l)"
        elif [[ "$(<  /tmp/updates | wc -l )" -gt 10 ]] && [[ "$(< /tmp/aur | wc -l )"  ]]; then
            echo " U: $(< /tmp/updates | wc -l) + $(< /tmp/aur | wc -l )"
        else
            # do nothing
        fi
    fi
}

function my_volume() {
    echo "V:$( amixer -c 0  -- get Master| awk '/Playback [0-9]{0,5} \[[0-9]{0,3}%]/ {print $4 $6}' )"
}

function dbox() {
    if [[ $(print -P '%D{ %S }') -eq 10 ]]; then
        dropbox-cli status > /tmp/box
    fi
    if [[ -f /tmp/box ]]; then
        box="$( cat /tmp/box )"
    fi
    if [[ $box = "Dropbox isn't running!" ]]
    then
        message="off"

    else
        message="$(echo "$box" | head -n1 )"
    fi
    if [[ $message == "Up to date" ]]
    then
        message="\xe2\x9c\x93"
    fi
    echo "D:$message"
}

function my_harvest() {
    if [[ $(( $(print -P '%D{ %M }') % 5 )) -eq 0 ]] && [[ -e $HOME/bin/harvest ]];
    then
        $HOME/bin/harvest > /tmp/harvest
    fi
    [[ -s /tmp/harvest ]] && echo "TIME: $( < /tmp/harvest )"


}

function dnd() {
    if [[ $(( $(print -P '%D{ %s }') % 5 )) -eq 0 ]] && [[ "$(dunstctl is-paused)" == 'true' ]]; then
        echo ' Do not disturb on! ' > /tmp/dnd
    fi
    if [[ $(( $(print -P '%D{ %s }') % 5 )) -eq 0 ]] && [[ "$(dunstctl is-paused)" == 'false' ]]; then
        echo ''  > /tmp/dnd
    fi
    echo "$( < /tmp/dnd )"
}

line="$(dnd)$(my_update) $(my_harvest) $(my_mail)"
if [[ -r "/sys/class/power_supply/BAT0/" ]]; then
    for d in /sys/class/power_supply/BAT?/; do
        line="$line $(my_bat $d)"
    done
fi
line="$line $(my_weather) $(my_date)"

xsetroot -name $line
echo $line
