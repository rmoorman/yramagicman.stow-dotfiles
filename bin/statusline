#!/usr/bin/env zsh

setopt extended_glob

function my_date () {
    # print -P "%D{ %a %d/%m/%Y %I:%M:%S %p }"
    print -P "%D{ %a %d/%m/%Y %I:%M %p }"
}

function my_bat() {
    bat_level=$( < $1/capacity )
    bat_stat=$( < $1/status )
    message=""
    if [[ "$bat_stat" == "Discharging" ]]
    then
        indicator="\xE2\x86\x93"
        message="B:$bat_level% $indicator - "
    else
        indicator="\xE2\x86\x91"
        message="B:$bat_level% $indicator - "
    fi
    if [[ $(( $bat_level > 96)) -eq 1 ]] \
           && [[ "$bat_stat" == "Charging" || "$bat_stat" == "Full" ]]; then
        message=""
    fi
    echo "$message"
}

function my_wifi(){
    [[ $( ip link | grep -Ec "wlan[0-9]{1}|wlp[0-9]{1}s[0-9]{1}") -eq 0 ]] && return
    [[ "$( ip link | awk '/wlan0/ {print $9}' )" == "DOWN" ]] && return

    if [[ $( command -v iwctl ) ]]; then
        wifi_status=$(iwctl station wlan0 show | awk '/State/ {print $2}')
    fi
    if [[ $( command -v nmcli ) ]]; then
        wifi_status=$(nmcli g | awk '/connected/ {print $1}' )
    fi

    ip=$(ip --color=never addr show | awk '/([0-9\.]{1,3}){4}\/[0-9]{1,2} brd/ {print $2}')
    echo "N: $wifi_status -"
}

function wifi_strength() {
    awk '/[0-9]*/ {if ($3/1 != 0) print $3}' /proc/net/wireless
}

function my_load() {
    load=$( ps -eo cmd,%cpu --sort=-%cpu | awk -F ' ' '{sum += $(NF)} END {split (sum, a, "."); print a[1]}' )
    mem=$(free -mht | awk '/Total/ {print $4}')
    swp=$(free -mht | awk '/Swap/ {print $4}')
    # cmd=$(ps -eo cmd,%cpu -U jonathan --sort=-%cpu |  awk  '/[\w\/]/ { n=split( $1, a, "/" ); print a[n] }' | sed '1q')
    # temp=$(sensors -f | awk '/Package/ {print $4}')
    echo "CPU:$load% MEM:$mem SWP:$swp"
}

function my_mail() {
    personal=$(ls ~/.config/mail/gilsons/Inbox.personal/new/ | grep -Evc '*,T$' )
    bills=$(ls ~/.config/mail/bills/Inbox.bills/new/  | grep -Evc '*,T$')
    # work=$(ls ~/.config/mail/work/Inbox.work/new/  | grep -Evc '*,T$' )
    work=0
    if test "$personal" -gt 0 || test "$work" -gt 0; then
        echo "M: $personal/$bills - "
    fi
}

function my_weather() {
    if [[ -z "$(< "/tmp/weather")" ]];
    then
        weather.py > /tmp/weather
        weather='W:'$(< /tmp/weather)
    fi
    modified_date=$(stat /tmp/weather | awk '/Modify/ {split($3, arr, ":"); print arr[1]}')
    if [[ ! "$(print -P "%D{ %H }" )" -eq $modified_date ]]
    then
        weather.py > /tmp/weather
        weather='W:'$(< /tmp/weather)
    else
        weather='W:'$(< /tmp/weather)
    fi
    if [[ "$weather" == " W:error" ]]; then
        weather.py > /tmp/weather
    fi
    echo $weather
}

function my_update() {
    if [[ ! -f /var/spool/cron/jonathan ]]
    then
        # notify-send 'check your user crontab'
    fi
    if [[ -f "/tmp/updates" ]]; then
        if [[ "$(<  /tmp/updates | wc -l )" -gt 10 ]] && [[ ! "$(< /tmp/aur)" ]]; then
            echo " U: $(< /tmp/updates | wc -l) - "
        elif [[ "$(<  /tmp/updates | wc -l )" -gt 10 ]] && [[ "$(< /tmp/aur | wc -l )"  ]]; then
            echo "U: $(< /tmp/updates | wc -l) + $(< /tmp/aur | wc -l ) - "
        else
            # do nothing
        fi
    fi
}

function my_volume() {
    echo "V:$( amixer -c 0  -- get Master| awk '/Playback [0-9]{0,5} \[[0-9]{0,3}%]/ {print $4 $6}' )"
}

function dnd() {
    if [[ $(( $(print -P '%D{ %s }') % 5 )) -eq 0 ]] && [[ "$(dunstctl is-paused)" == 'true' ]]; then
        echo ' Do not disturb on! ' > /tmp/dnd
    fi
    if [[ $(( $(print -P '%D{ %s }') % 5 )) -eq 0 ]] && [[ "$(dunstctl is-paused)" == 'false' ]]; then
        echo ''  > /tmp/dnd
    fi
    [[ -n $(< /tmp/dnd ) ]] && echo "$( < /tmp/dnd ) - "
}

line="$(dnd)$(my_update)$(my_mail)"
if [[ -r "/sys/class/power_supply/BAT0/" ]]; then
    for d in /sys/class/power_supply/BAT?/; do
        line="$line$(my_bat $d)"
    done
fi
line="$line$(my_wifi)$(my_date) - - "
# line="$line$(my_wifi)$(my_date)"

xsetroot -name $line
echo $line
