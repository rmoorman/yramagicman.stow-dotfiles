function pkg() {
    zparseopts -E -D -A opts a:=alt -alt:=alt f:=from -from:=from -theme=theme t=theme d:=depends
    local alternate=$alt[2]
    local src=$from[2]
    local deps=$depends[2]
    if [[ "$1" == 'init' ]]; then
        pkgs=()
        return
    elif [[ "$1" == 'load' ]]; then
        procs=()
        _load_pkgs
        if [[ $#procs -gt 0 ]] && [[ $errs -eq 0 ]]; then
            echo 'reloading...'
            command rm -r "$MODULES_DIR/logs"
            source $HOME/.zshrc
        fi
        unset procs
        return
    elif [[ "$1" == 'update' ]]; then
        _update $pkgs
    fi
    if [[ $alternate ]]; then
        pkgs+=($1 $alternate)
    elif [[ $src ]]; then
        if [[ $src =~ '^(omz|ohmyzsh|oh-my-zsh)' ]]; then
            local d=("${(@s#,#)deps}")
            if [[ $theme ]]; then
                pkgs+=('robbyrussell/oh-my-zsh' "themes/$1")
                _source_deps 'robbyrussell/oh-my-zsh'
            else
                pkgs+=('robbyrussell/oh-my-zsh' "plugins/$1/$1")
                _source_deps 'robbyrussell/oh-my-zsh'
            fi
        fi
        if [[ $src =~ '^(prezto)' ]]; then
            pkgs+=('sorin-ionescu/prezto' "modules/$1/init")
            if [[ -d "$MODULES_DIR/$location/modules/$1/functions"  ]]; then
                _get_clone_dest 'sorin-ionescu/prezto'
                fpath=("$MODULES_DIR/$location/modules/$1/functions" $fpath)
                _source_deps 'sorin-ionescu/prezto'
                unset location
            fi
        fi
    else
        pkgs+=($1 0)
    fi
}

function _source_deps() {
    if [[ $d ]]; then
        for p in $d; do
            pkgs+=("$1" "$p")
        done
    fi
}
