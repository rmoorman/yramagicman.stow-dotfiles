"{{{ defaults
if filereadable(expand('$VIMRUNTIME/defaults.vim'))
    unlet! g:skip_defaults_vim
    source $VIMRUNTIME/defaults.vim
endif

" Enable file type detection and do language-dependent indenting.
filetype plugin indent on

" Switch syntax highlighting on
syntax on
"}}}
"{{{ Plugin loading and settings
let g:VimPack_Setup_Folders = ['after', 'autoload', 'backup', 'colors', 'doc', 'spell', 'swaps', 'syntax','plugin', 'undo']
let g:VimPack_Auto_Install = 1
let g:VimPack_Auto_Update = 1

call pack#load()

PlugOpt 'w0rp/ale'
PlugOpt 'git@gitlab.com:yramagicman/auto-omnicomplete'
if executable('fzf')
    if isdirectory('/usr/local/opt/fzf')
        set runtimepath+=/usr/local/opt/fzf
    endif
    PlugOpt 'junegunn/fzf.vim'
    packadd! fzf
endif
PlugOpt 'bronson/vim-visual-star-search'
PlugOpt 'editorconfig/editorconfig-vim'
PlugOpt 'tpope/vim-commentary'
PlugOpt 'tpope/vim-repeat'
PlugOpt 'tpope/vim-surround'
PlugOpt 'vim-scripts/vim-indent-object'
" PlugOpt 'morhetz/gruvbox'
PlugOpt 'sheerun/vim-polyglot'
packadd! matchit
" packadd! ale
packadd! auto-omnicomplete
packadd! vim-visual-star-search
packadd! editorconfig-vim
packadd! vim-commentary
packadd! vim-repeat
packadd! vim-surround
packadd! vim-indent-object
packadd! vim-polyglot
" packadd! gruvbox
if ! has('nvim')
    packadd! editexisting
endif
let g:AutoOmniComplete_tab = 1
"}}}
"{{{ colors
set background=dark
colorscheme monochrome
"}}}
"{{{ autocommands for loading extensions
augroup extensions
    autocmd!
    autocmd FileType python,php,c,cpp,zsh,sh silent! packadd ale | redraw
    autocmd BufRead *.org  set filetype=org
    autocmd FileType vue syn sync fromstart
augroup end
"}}}
"{{{ ale settings
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 1
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
"}}}
let mapleader=","
let g:NoAutoPairs = 1
" expand( '%:e') extension
" expand( '%:h') filename
" expand( '%:p') real path
" expand( '%:t') directory
" expand( '%:S') path as string
